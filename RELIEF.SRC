
      PROGRAM RELIEF
      IMPLICIT DOUBLE PRECISION ( A-H, O-Z )
C
      CHARACTER*80 LINE
      CHARACTER*40 UDAT,UOUT
      CHARACTER*4 FDAT /'.grd'/, FOUT /'.rel'/
C
      COMMON /DATA/ XY(2),CUTOFF,GRID(400,400),VERTAC,NX
      COMMON /PARAM/ SCALEX,SCALEY
C
      CALL MAKNAME(1,UDAT,ILEN,FDAT)
      CALL MAKNAME(2,UOUT,ILEN,FOUT)
      IF (ILEN .EQ. 0) STOP 'usage: relief grdfile relfile '
C
      OPEN (30,FILE=UDAT)
      OPEN ( 2,FILE=UOUT)
C
      WRITE (6,1000)
1000  FORMAT(' EYE POSITION IN THREE SPACE ',$)
      READ (5,*) A,B,C
      WRITE (6,1010)
1010  FORMAT(' CUTOFF, MAGNIFICATION, VERTICAL ACCETNTUATION ')
      READ (5,*) CUTOFF,RMAGNF,VERTAC
C
      READ (30,100) LINE
      READ (30,100) LINE
100   FORMAT (A80)
      READ (30,*) NX,N,XY(1),XY(2)
      READ (30,*) M,N
      READ (30,*) X,Y,Z
      DO 5 I = 1,N
        READ (30,*) X,Y,Z
5     CONTINUE
      DO 10 I = 1,NX
          READ (30,*) (GRID(J,I),J=1,NX)
10    CONTINUE
C
      XLOW = -1.0D0*DFLOAT(NX/2)
      YLOW = -1.0D0*DFLOAT(NX/2)
      XHIGH = DFLOAT(NX/2)
      YHIGH = DFLOAT(NX/2)
C
      SCALEX = (10.0D0/1024.0)*RMAGNF
      SCALEY = (10.0D0/ 780.0)*RMAGNF
C
      CALL PLOTS(53,0,2)
      CALL PLOT (0.0,1.0,-3)
C
      CALL PLT3DM (XLOW,XHIGH,YLOW,YHIGH,A,B,C,NX,NX,3)
C     CALL PLT3DM (XLOW,XHIGH,YLOW,YHIGH,A,B,C,NX,NX,2)
C
      CALL PLOT (0.0,0.0,999)
C
      END
      SUBROUTINE FUN(X,Y,Z)
      IMPLICIT DOUBLE PRECISION ( A-H, O-Z )
C
      COMMON /DATA/ XY(2),CUTOFF,GRID(400,400),VERTAC,NX
C
      IX = INT(X+DFLOAT(NX/2))
      IY = INT(Y+DFLOAT(NX/2))
      IF (IX .EQ. 0) IX = 1
      IF (IY .EQ. 0) IY = 1
      Z = GRID(IX,IY)
      IF (Z .GT. CUTOFF) Z = CUTOFF
      IF (Z .LT. -1.0D0*CUTOFF) Z = -1.0D0*CUTOFF
      Z = VERTAC*Z
C
      RETURN
      END
      SUBROUTINE IPLOT (XO,YO,XN,YN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL X0,Y0,X1,Y1,X2,Y2
      SAVE X0,Y0
C
      COMMON /PARAM/ SCALEX,SCALEY
C
      X1 = SNGL(XO*SCALEX)
      Y1 = SNGL(YO*SCALEY)
      X2 = SNGL(XN*SCALEX)
      Y2 = SNGL(YN*SCALEY)
C
      IF (ABS(X0-X1) .GT. 1.0D-06 .OR. ABS(Y0-Y1) .GT. 1.0D-06)
     +   CALL PLOT(X1,Y1,3)
C
      CALL PLOT(X2,Y2,2)
C
      X0 = X2
      Y0 = Y2
C
      RETURN
      END
      SUBROUTINE MAKNAME(I,STRING,L,EXT)
      CHARACTER*(*) STRING,EXT
      INTEGER I,J
      CALL GETARG(I,STRING)
      J = LEN(STRING)
      DO 10 N = 1,J
        IF(STRING(N:N) .EQ. ' ') THEN
          L = N - 1
          STRING = STRING(1:L)//EXT
          RETURN
        ENDIF
10    CONTINUE
      STOP ' FAILED TO MAKE A FILE NAME '
      RETURN
      END
      SUBROUTINE PLT3DM (XLOW,XHIGH,YLOW,YHIGH,A,B,C,N,M,IDI)
      IMPLICIT DOUBLE PRECISION ( A-H, O-Z )
C THE ROUTINE PLT3DM MAKES A TWO DIMENSIONAL PICTURE OF A
C FUNCTION OF TWO ARGUMENTS ,THE HIDDEN PARTS OF THE SURFACE
C NOT SHOWN .
C
C AUTHOR &    WAMBECQ A.
C             APLIED MATHEMATICS AND PROGRAMMING DIVISION
C             CELESTIJNENLAAN 200B
C             B-3030  HEVERLEE
C             BELGIUM
C
C THE ROUTINE FIRST FINDS THE POINT NEAREST TO THE VIEWER]S
C EYE ,THEN DETERMINES THE CENTER OF THE PICTURE AND PROJECTS
C THIS TO THE POINT (512,390) OF THE WORKING SPACE OF THE
C ROUTINE ,BEING  1024 INTEGER UNITS IN THE X - DIRECTION ,
C AND  780 INTEGER UNITS IN THE  Y - DIRECTION .
C THEN LINES ON THE SURFACE ARE DISPLAYED.
C LINES IN THE FOREGROUND ARE ALWAYS PLOTTED FIRST .
C IF A LINE LIES OUTSIDE THE VISIBILITY AREA ,THE LINE IS
C NOT DRAWN .ON THE EDGE ,LINEAR INTERPOLATION IS USED .
C THE EDGES OF THE VISIBILITY AREA ARE STORED IN THE ARRAY
C MASK ,AND ARE UPDATED EACH TIME A LINE WAS WRITTEN .
C CALLING SEQUENCE &
C
C     CALL PLT3DM (FUN,XLOW,XHIGH,YLOW,YHIGH,A,B,C,N,M,IDI)
C
C ARGUMENTS &
C FUN       & FUNCTION OF TWO VARIABLES .
C             FUN = FUN(X,Y)
C             (MUST BE DECLARED 'EXTERNAL ' IN THE CALLING
C              PROGRAM)
C XLOW,XHIGH& BOUNDS OF THE  X - INTERVAL
C YLOW,YHIGH& BOUNDS OF THE  Y - INTERVAL
C A,B,C     & VIEWERS EYE POSITION IN THREE-SPACE
C N         & NUMBER OF LINES ON THE SURFACE
C M         & NUMBER OF POINTS PER LINE
C             (FOR N AND M ,A VALUE OF  60 - 100  WILL BE
C              SUFFICIENT . M MUST BE SMALLER THAN 198)
C IDI       & = 1 & LINES ARE DRAWN PARALLEL TO THE
C                   Y - DIRECTION .
C             = 2 & LINES ARE DRAWN PARALLEL TO THE
C                   X - DIRECTION .
C           = 3 & LINES ARE DRAWN IN BOTH DIRECTIONS
C
C A PROGRAM USING THIS ROUTINE MUST CONTAIN AT LEAST &
C
C        1) CALLING PROGRAM
C        2) FUNCTION FUN(X,Y)
C        3) SUBROUTINE PLT3DM
C        4) SUBROUTINE IPLOT (IXO,IYO,IXN,IYN)
C           THIS ROUTINE LINKS THE (1024 X 780) WORKING SPACE
C           OF PLT3DM TO THE PHISICAL SPACE OF THE DEVICE(S))
C           USED . (PLOTTER AND/OR DISPLAY AND/OR LINEPRINTER)
C           IPLOT DRAWS A LINE IN THE  1024 X 780 WORKING
C           SPACE ,FROM (IXO,IYO) TO (IXN,IYN)
C
C   REMARK & A SCALING IN THE CALLING PROGRAM MUST BE DONE
C            TO LINK SOFTWARE TO HARDWARE SAPCE .
C            IN CASE OF A PLOTTER ,THE PEN SHOULD BE
C            POSITIONED IN THE 'UP' STATE AT THE BOTTEM LEFT
C            CORNER OF THE PAPER .
C
C
C   NOTE: WHEN CHANGING THE DIMENSION OF GRID, ICORD MUST ALSO BE 
C   CHANGED.  IF GRID(N,N) THEN ICORD MUST HAVE DIMENSIONS OF 
C   ICORD(N,N+3)
C
      DIMENSION MASK(2,1025),X(2),Y(2),Z(2)
      DOUBLE PRECISION ICORD(2,403)
C
C GREAT IS A GREAT (MACHINE DEPENDENT) NUMBER .
      DATA GREAT /1.E+20/
C STATEMENT FUNCTIONS THAT COMPUTE THE COORDINATES IN TWO
C DIMENSIONS .(THIS IS A PROJECTION AFTER TWO ROTATIONS ,
C SUCH THAT VERTICAL LINES IN THREE-SPACE ARE PROJECTED
C AS VERTICAL LINES IN TWO-SPACE ) .
      XX(X1,Y1,Z1) = XA*X1 + XB*Y1 + 0.*Z1
      YY(X1,Y1,Z1) = YA*X1 + YB*Y1 + YC*Z1
      ZZ(X1,Y1,Z1) = ZA*X1 + ZB*Y1 + ZC*Z1
C INITIALISATION
C
      DD = A*A + B*B
      D = -1./DSQRT(DD)
      E = 1./DSQRT(DD + C*C)
      XA = -B*D
      XB = A*D
      YA = A*C*D*E
      YB = B*C*D*E
      YC = -DD*D*E
      ZA = A*E
      ZB = B*E
      ZC = C*E
      IFL = 0
      IFPLT = 1
      NP1 = N + 1
      MP1 = M + 1
      MP2 = M + 2
      MP3 = M + 3
      IL = IDI
      IH = IL
      IF(IDI.EQ.3) IL = 1
      IF(IDI.EQ.3) IH = 2
C SEARCH THE GREATEST FUNCTION VALUE
      RMIN = GREAT
      RMAX = -RMIN
      HX = (XHIGH - XLOW)/19.0D0
      HY = (YHIGH - YLOW)/19.0D0
      DO 20 I = 1,20
        XI = XLOW + DFLOAT(I-1)*HX
        DO 10 J = 1,20
          YI = YLOW + DFLOAT(J-1)*HY
          CALL FUN(XI,YI,FXY)
          IF(FXY.LT.RMIN) RMIN = FXY
          IF(FXY.GT.RMAX) RMAX = FXY
   10   CONTINUE
   20 CONTINUE
C DETERMINE THE CENTER OF THE PICTURE
      X(1) = XLOW
      X(2) = XHIGH
      Y(1) = YLOW
      Y(2) = YHIGH
      Z(1) = RMIN - DABS(RMIN)*0.03D0
      Z(2) = RMAX + DABS(RMAX)*0.03D0
      XM = XX((X(1)+X(2))/2,(Y(1)+Y(2))/2,(Z(1)+Z(2))/2)
      YM = YY((X(1)+X(2))/2,(Y(1)+Y(2))/2,(Z(1)+Z(2))/2)
C DETERMINE THE POINT NEAREST TO THE VIEWERS EYE .
      RRMAXX = -GREAT
      RRMAXY = -GREAT
      RRMAXZ = -GREAT
      DO 60 I = 1,2
        DO 50 J = 1,2
          RZZR = ZZ(X(I),Y(J),0.0D0)
          IF(RZZR.LE.RRMAXZ) GO TO 30
          IMAX = I
          JMAX = J
          RRMAXZ = RZZR
   30     DO 40 K = 1,2
            RRMAXX = DMAX1(RRMAXX,DABS(XX(X(I),Y(J),Z(K))- XM ))
            RRMAXY = DMAX1(RRMAXY,DABS(YY(X(I),Y(J),Z(K))- YM ))
   40     CONTINUE
   50   CONTINUE
   60 CONTINUE
      HIGHX = X(IMAX)
      HIGHY = Y(JMAX)
      IMAX = 3 - IMAX
      JMAX = 3 - JMAX
      RLOWX = X(IMAX)
      RLOWY = Y(JMAX)
      DO 250 IDIR = IL,IH
      DO 70 I = 1,1025
        MASK(1,I) = 780
        MASK(2,I) = -1
   70 CONTINUE
      XH = (RLOWX - HIGHX)/DFLOAT(N)
      YH = (RLOWY - HIGHY)/DFLOAT(M)
C DETERMINE THE DESIRED DIRECTION OF THE LINES ON THE SURFACE
      IF(IDIR.NE.2) GO TO 80
      XH = (RLOWX - HIGHX)/DFLOAT(M)
      YH = (RLOWY - HIGHY)/DFLOAT(N)
C SCALING
   80 SCX = 511.0D0/RRMAXX
      SCY = 389.0D0/RRMAXY
C
C IF A UNIFORM SCALING IS DESIRED ,REMOVE THE C FROM THE
C FOLLOWING TWO CARDS &
C
      IF(SCX.GT.SCY) SCX = SCY
      SCY = SCX
C
      DO 240 I = 1,NP1
C COMPUTE A LINE
        TI = I - 1
        XI = HIGHX + TI*XH
        IF(I.EQ.1) GO TO 90
C COMPUTE THE BEGIN AND END SEGMENTS OF EACH LINE
        ICORD(1,1) = ICORD(1,2)
        ICORD(2,1) = ICORD(2,2)
        ICORD(1,MP3) = ICORD(1,MP2)
        ICORD(2,MP3) = ICORD(2,MP2)
   90   DO 110 J = 2,MP2
          TJ = J - 2
          YI = HIGHY + TJ*YH
          IF(IDIR.NE.2) GO TO 100
          YI = HIGHY + TI*YH
          XI = HIGHX + TJ*XH
  100     CALL FUN(XI,YI,ZI)
          ICORD(1,J) = (XX(XI,YI,ZI) - XM)*SCX + 513.0D0
          ICORD(2,J) = (YY(XI,YI,ZI) - YM)*SCY + 391.0D0
  110   CONTINUE
        IF(I.NE.1) GO TO 120
        ICORD(1,1) = ICORD(1,2)
        ICORD(2,1) = ICORD(2,2)
        ICORD(1,MP3) = ICORD(1,MP2)
        ICORD(2,MP3) = ICORD(2,MP2)
  120   INDF = 1
        IF(IFPLT.LT.0) INDF = MP3
C
C UP TO STATEMENT  190  ,A LINE IS DRAWN ,WITH THE HIDDEN
C PARTS NOT SHOWN .
        IXO = ICORD(1,INDF)
        IYO = ICORD(2,INDF)
C
      IXOI=INDF
C
        IPLT = 0
        IF(MASK(2,IXO).LT.IYO) IPLT = 2
        IF(MASK(1,IXO).GT.IYO) IPLT = 1
        DO 190 JJ = 2,MP3
          J = JJ
          IF(IFPLT.LT.0) J = MP3 - JJ + 1
          IXN = ICORD(1,J)
          IYN = ICORD(2,J)
C
      IXNI=J
C
          IPLT1 = 0
          IF(MASK(2,IXN).LT.IYN) IPLT1 = 2
          IF(MASK(1,IXN).GT.IYN) IPLT1 = 1
C THE WHOLE SEGMENT IS HIDDEN
          IF(IPLT1.EQ.0.AND.IPLT.EQ.0) GO TO 180
C THE SEGMENT INTERSECTS WITH ONE EDGE .DETERMINE THE
C INTERSECTION POINT BY LINEAR INTERPOLATION .
          IF(IPLT1.EQ.0.OR.IPLT.EQ.0) GO TO 160
C THE SEGMENT INTERSECTS WITH THE TWO EDGES .
          IF(IPLT1.NE.IPLT) GO TO 140
C THE WHOLE SEGMENT IS VISIBLE .
C
130   CALL IPLOT(ICORD(1,IXOI),ICORD(2,IXOI),
     1           ICORD(1,IXNI),ICORD(2,IXNI))
C
          GO TO 180
  140     IF(MASK(1,IXO).GT.IYO.AND.MASK(2,IXO).LT.IYO) IPLT = IPLT1
          IF(MASK(1,IXN).GT.IYN.AND.MASK(2,IXN).LT.IYN) IPLT1 = IPLT
          IF(IPLT.EQ.IPLT1) GO TO 130
          IFL = 1
          IHPLT1 = IPLT1
          IPLT1 = 0
          GO TO 160
  150     IPLT1 = IHPLT1
          IFL = 0
  160     IT = IPLT + IPLT1
          A1 = IYO - IYN
          A2 = MASK(IT,IXO) - MASK(IT,IXN)
          B1 = IXN - IXO
          C1 = DFLOAT(IXN)*DFLOAT(IYO) - DFLOAT(IXO)*DFLOAT(IYN)
          C2 = DFLOAT(IXN)*DFLOAT(MASK(IT,IXO))
          C2 = C2 - DFLOAT(IXO)*DFLOAT(MASK(IT,IXN))
          DDD = B1*(A1-A2)
          IF(DDD.EQ.0.) GO TO 130
C
          XI = B1*(C1 - C2)/DDD
          YI = (A1*C2 - A2*C1)/DDD
C
          IF(IPLT.NE.0) GO TO 170
C DRAW THE VISIBLE PART OF THE SEGMENT .
C
      CALL IPLOT(XI,YI,ICORD(1,IXNI),ICORD(2,IXNI))
C
          GO TO 180
C
170   CALL IPLOT(ICORD(1,IXOI),ICORD(2,IXOI),XI,YI)
C
  180     IPLT = IPLT1
          IF(IFL.EQ.1) GO TO 150
          IXO = IXN
          IYO = IYN
C
      IXOI=IXNI
C
  190   CONTINUE
C
C UPDATE THE ARRAY MASK ,CONTAINING THE EDGES OF THE
C VISIBILITY AREA .
C
        IFPLT = -IFPLT
        INDXO = ICORD(1,1)
        INDYO = ICORD(2,1)
        DO 230 J =2,MP3
          INDXN = ICORD(1,J)
          INDYN = ICORD(2,J)
          IF(INDXO.NE.INDXN) GO TO 200
          MASK(1,INDXN) = MIN0(MASK(1,INDXN),INDYN)
          MASK(2,INDXN) = MAX0(MASK(2,INDXN),INDYN)
          GO TO 220
  200     INDO = MIN0(INDXO,INDXN)
          INDN = MAX0(INDXO,INDXN) - 1
          DO 210 K = INDO,INDN
            RINTP = DFLOAT(K)*DFLOAT(INDYO-INDYN)
            RINTP = RINTP + DFLOAT(INDXO)*DFLOAT(INDYN)
            RINTP = RINTP - DFLOAT(INDXN)*DFLOAT(INDYO)
            IINTP = RINTP/(DFLOAT(INDXO-INDXN)) + 0.5
            MASK(1,K) = MIN0(MASK(1,K),IINTP)
            MASK(2,K) = MAX0(MASK(2,K),IINTP)
  210     CONTINUE
          INDXO = INDXN
  220     INDYO = INDYN
  230   CONTINUE
  240 CONTINUE
C END OF THE PICTURE .
  250 CONTINUE
      RETURN
      END

